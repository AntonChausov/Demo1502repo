
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)  
	
	Ответственный=ПараметрыСеанса.ТекущийСотрудник;
	
КонецПроцедуры


// У вас есть СУММА по СуммеСНДС, но нет по СуммеНДС.
//Поля в запросе должны быть разделены на Агрегируемые и Группировочные. Группировочные в этой задаче номенклатура и ее тип, соответственно у остальных должна быть установлена агрегатная функция (СУММА).

Процедура ОбработкаПроведения(Отказ, Режим)    
	
	Движения.Товары.Очистить();
	Движения.Товары.Записывать = Истина;    
	Движения.Расходы.Очистить();
	Движения.Расходы.Записывать = Истина;     
	Движения.Управленческий.Очистить(); 
	Движения.Записать();  
	
	// регистр Управленческий   
	//Дт62 Расч. с покупателями - Кт90.1 Выручка
	Проводка=Движения.Управленческий.Добавить(); 
	Проводка.Период=Дата; 
	Проводка.СчетДт=ПланыСчетов.Управленческий.РассчетыСПокупателями; 
	Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты]
	=Покупатель; 
	Проводка.СчетКт=ПланыСчетов.Управленческий.Выручка;  
	Проводка.Сумма=ТоварыИУслуги.Итог("СуммаСНДС");
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	РеализацияТоваровИУслугТовары.Номенклатура.Тип КАК Тип,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
	|	СУММА(РеализацияТоваровИУслугТовары.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(РеализацияТоваровИУслугТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.ТоварыИУслуги КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Номенклатура,
	|	РеализацияТоваровИУслугТовары.Номенклатура.Тип
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.Номенклатура КАК Номенклатура,
	|	ВТТовары.Количество КАК Количество,
	|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТТовары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТТовары.Сумма КАК Сумма,
	|	ВТТовары.СуммаСНДС КАК СуммаСНДС,
	|	ВТТовары.СуммаНДС КАК СуммаНДС,
	|	ВТТовары.Тип КАК Тип,
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК СуммаОстатокБух,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокБух
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Товары.Остатки КАК ТоварыОстатки
	|		ПО ВТТовары.Номенклатура = ТоварыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&ДатаДокумента,
	|				Счет = &Номенклатура,
	|				,
	|				Субконто1 В
	|					(ВЫБРАТЬ
	|						ВТТовары.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ВТТовары КАК ВТТовары)) КАК УправленческийОстатки
	|		ПО ВТТовары.Номенклатура = УправленческийОстатки.Субконто1");  
	
	Запрос.УстановитьПараметр("ДатаДокумента", Новый Граница(МоментВремени(), ВидГраницы.Включая)); 
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	Результат=Запрос.Выполнить(); 
	Выборка=Результат.Выбрать();  
	
	Движения.Управленческий.Записывать=Истина; 
	Движения.Товары.Записывать = Истина; 
	Движения.Расходы.Записывать = Истина;  
	Движения.Доходы.Записывать = Истина;  
	
	Пока Выборка.Следующий() Цикл   
		Если Выборка.Тип = Перечисления.ТипыНоменклатуры.Товар Тогда   //В регистры Товары, Расходы, Доходы заносим всю номенклатуру с типом Товар
			Если Выборка.Количество > Выборка.КоличествоОстаток Тогда 
				Недостаточно=Выборка.Количество-Выборка.КоличествоОстаток; 
				Сообщить(СтрШаблон("Не хватает товара %1 на складе в количестве %2 шт.",Выборка.НоменклатураПредставление, Недостаточно)); 
				Отказ=Истина;
			ИначеЕсли  Выборка.Количество = Выборка.КоличествоОстаток Тогда   
				Себестоимость=Выборка.СуммаОстаток+Выборка.СуммаНДС; 
			Иначе
				Себестоимость=Выборка.СуммаОстаток / Выборка.КоличествоОстаток * Выборка.Количество+Выборка.СуммаНДС; 
			КонецЕсли; 
			
			/// регистр Товары Расход    
			//Движения.Товары.Записывать = Истина;
			Движение = Движения.Товары.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Количество = Выборка.Количество;
			Движение.Сумма = Себестоимость;  
			
			// регистр Расходы   
			Движение = Движения.Расходы.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Количество = Выборка.Количество;
			Движение.Сумма = Себестоимость;   
			
			//Движения Управленческий Дт 90.2 Расходы - Кт41 Товары
			Проводка=Движения.Управленческий.Добавить(); 
			Проводка.Период=Дата; 
			Проводка.СчетДт=ПланыСчетов.Управленческий.Расходы;   
			Проводка.СчетКт=ПланыСчетов.Управленческий.Товары; 
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]
			=Выборка.Номенклатура; 
			Проводка.Сумма=Себестоимость;  
			Проводка.Количество=Выборка.Количество; 
			
			
		КонецЕсли; 	
		// регистр Доходы 
		Движение = Движения.Доходы.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Количество = Выборка.Количество;
		Движение.Сумма = Выборка.Сумма;
		Движение.СуммаСНДС = Выборка.СуммаСНДС;
		
	КонецЦикла;
	
	// регистр ВзаиморасчетыСКонтрагентами Приход
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
	Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Контрагент = Покупатель;
	Движение.Сумма = Сумма;       
	
	
	
КонецПроцедуры   

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//сохранять в реквизит шапки Сумма итог по одноименному реквизиту табличной части для отображения в списках
	Сумма = ТоварыИУслуги.Итог("СуммаСНДС");   
	//Если ЭтотОбъект.Проведен И РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда   
	//	Сообщить ("Во избежание недоразумений, перед повторным проведением вначале распроведите документ"); 
	//	Отказ=Истина
	//КонецЕсли;
КонецПроцедуры





